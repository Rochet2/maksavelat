{"version":3,"sources":["pages/MainPage.js","pages/AddDebt.js","pages/Reasons.js","pages/Debts.js","pages/Contacts.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["MySegment","_ref","to","linkProps","segmentProps","children","react_default","a","createElement","Link","Object","assign","Segment","padded","MainPage","Container","textAlign","fluid","style","cursor","height","Group","MainPage_MySegment","Header","toOptions","label","key","text","value","initialState","debt","who","amount","for","comment","errorAmount","errorContact","errorReason","errorTimer","AddDebt","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","_this$props","reasons","contacts","whiteTheme","_this$state","reason","inverted","basic","Form","onSubmit","Number","clearTimeout","setState","setTimeout","dispatch","type","date","moment","format","paid","react","Input","required","error","placeholder","onChange","_","e","Select","options","map","widths","Button","color","onClick","preventDefault","Component","connect","Reasons","size","action","content","target","List","divided","Item","Content","floated","icon","Debts","summary","id","Meta","local","Description","debts","Icon","name","link","summaries","filter","forEach","values","s","toSummaries","sort","b","localeCompare","summaryItem","bind","debtItem","Contacts","contact","App","BrowserRouter","basename","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","reducer","paramstate","realstate","JSON","parse","localStorage","getItem","stringify","length","find","r","push","c","reduce","acc","d","Math","max","setItem","store","createStore","render","ReactDOM","es","src_App","document","getElementById","subscribe","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f414f500.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Header, Container, Segment } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MySegment = ({to, linkProps, segmentProps, children}) => <Link to={to} {...linkProps}><Segment padded=\"very\" {...segmentProps}>{children}</Segment></Link>\r\n\r\nconst MainPage = () => (\r\n<Container textAlign=\"center\" fluid style={{ cursor: 'pointer', height: '100%' }}>\r\n<Segment.Group>\r\n    <MySegment to=\"/AddDebt\">\r\n    {/* <MyIcon name='user' />\r\n    <MyIcon name='arrow right' />\r\n    <MyIcon name='euro sign' /> */}\r\n    <Header>Add debt</Header>\r\n    </MySegment>\r\n    <MySegment to=\"/Debts\">\r\n    {/* <MyIcon name='user' />\r\n    <MyIcon name='handshake' />\r\n    <MyIcon name='user' /> */}\r\n    <Header>Debts</Header>\r\n    </MySegment>\r\n    <MySegment to=\"/Contacts\">\r\n    {/* <MyIcon name='users' /> */}\r\n    <Header>Edit contacts</Header>\r\n    </MySegment>\r\n    <MySegment to=\"/Reasons\">\r\n    {/* <MyIcon name='users' /> */}\r\n    <Header>Edit reasons</Header>\r\n    </MySegment>\r\n</Segment.Group>\r\n</Container>\r\n)\r\n\r\nexport default MainPage\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { array, func, bool } from 'prop-types'\r\nimport { Form, Segment, Button } from 'semantic-ui-react'\r\nimport moment from 'moment'\r\n\r\nconst toOptions = (label) => ({ key: label, text: label, value: label })\r\n\r\nconst initialState = () => ({\r\n    debt: true,\r\n    who: '',\r\n    amount: '',\r\n    for: '',\r\n    comment: '',\r\n    errorAmount: false,\r\n    errorContact: false,\r\n    errorReason: false,\r\n    errorTimer: null,\r\n})\r\n\r\nclass AddDebt extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = initialState()\r\n    }\r\n\r\n    render() {\r\n        const { reasons, contacts, whiteTheme } = this.props\r\n        let {errorAmount, errorContact, errorReason, debt, who, for: reason, comment, amount} = this.state\r\n        return (\r\n            <div>\r\n                <Segment inverted={whiteTheme} basic style={{ height: '100vh'}}>\r\n                    <Form\r\n                        inverted={whiteTheme}\r\n                        onSubmit={() => {\r\n                            amount = Number(amount)\r\n                            if (!amount)\r\n                                errorAmount = true\r\n                            if (!who)\r\n                                errorContact = true\r\n                            if (!reason)\r\n                                errorReason = true\r\n\r\n                            if (!errorAmount && !errorContact && !errorReason) {\r\n                                this.props.dispatch({\r\n                                    type: 'AddDebt',\r\n                                    value: {\r\n                                        who: who,\r\n                                        amount: debt ? -amount : amount,\r\n                                        reason: reason,\r\n                                        comment: comment,\r\n                                        date: moment().format(),\r\n                                        paid: false,\r\n                                    },\r\n                                })\r\n                                if (this.state.errorTimer)\r\n                                    clearTimeout(this.state.errorTimer)\r\n                                this.setState(initialState())\r\n                            } else {\r\n                                if (this.state.errorTimer)\r\n                                    clearTimeout(this.state.errorTimer)\r\n                                this.setState({errorAmount, errorReason, errorContact, errorTimer: setTimeout(()=>this.setState({errorAmount: false, errorReason: false, errorContact: false}), 3000)})\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.debt ?\r\n                            <Fragment>\r\n                                <Form.Input required error={errorAmount} type=\"number\" label='You owe' placeholder='Amount...' value={this.state.amount} onChange={(_, e) => this.setState({ amount: e.value })} />\r\n                                <Form.Select required error={errorContact} label='To' options={contacts.map(toOptions)} placeholder='Contact...' value={this.state.who} onChange={(_, e) => this.setState({ who: e.value })} />\r\n                            </Fragment>\r\n                            :\r\n                            <Fragment>\r\n                                <Form.Select required error={errorContact} label='Contact' options={contacts.map(toOptions)} placeholder='Contact...' value={this.state.who} onChange={(_, e) => this.setState({ who: e.value })} />\r\n                                <Form.Input required error={errorAmount} type=\"number\" label='Owes you' placeholder='Amount...' value={this.state.amount} onChange={(_, e) => this.setState({ amount: e.value })} />\r\n                            </Fragment>\r\n                        }\r\n                        <Form.Select required error={errorReason} label='For' options={reasons.map(toOptions)} placeholder='Reason...' value={this.state.for} onChange={(_, e) => this.setState({ for: e.value })} />\r\n                        <Form.Input label='Comment (optional)' placeholder='Comment...' value={this.state.comment} onChange={(_, e) => this.setState({ comment: e.value })} />\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Button color=\"blue\" basic fluid onClick={(e) => {\r\n                                e.preventDefault()\r\n                                this.setState((state) => ({ debt: !state.debt }))\r\n                            }}>Toggle reciever</Form.Button>\r\n                            <Form.Button color=\"green\" basic fluid>Add debt</Form.Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reasons: state.reasons,\r\n        contacts: state.contacts,\r\n        whiteTheme: state.whiteTheme,\r\n    }\r\n}\r\n\r\nAddDebt.propTypes = {\r\n    reasons: array.isRequired,\r\n    contacts: array.isRequired,\r\n    whiteTheme: bool.isRequired,\r\n    dispatch: func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddDebt)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { array, func, bool } from 'prop-types'\r\nimport { Header, Button, Segment, Input, List } from 'semantic-ui-react'\r\n\r\nclass Reasons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { whiteTheme, dispatch, reasons } = this.props\r\n        return (\r\n            <div>\r\n                <Segment inverted={whiteTheme} basic style={{ height: '100vh' }}>\r\n                    <Header size=\"large\">Reasons</Header>\r\n                    <Input\r\n                        action={{ content: 'Add reason', onClick: () => {\r\n                            dispatch({ type: 'AddReason', value: this.state.value })\r\n                            this.setState({ value: '' })\r\n                        }}}\r\n                        placeholder='Reason name...'\r\n                        onChange={(e => this.setState({ value: e.target.value }))}\r\n                        value={this.state.value}\r\n                    />\r\n                    <List inverted={whiteTheme} divided>\r\n                        {reasons.map(reason => (\r\n                            <List.Item key={reason}>\r\n                                <List.Content floated=\"right\">\r\n                                    <Button\r\n                                        color='red'\r\n                                        content={'Remove'}\r\n                                        icon='remove'\r\n                                        onClick={() => {\r\n                                            dispatch({ type: 'RemoveReason', value: reason })\r\n                                        }}\r\n                                    />\r\n                                </List.Content>\r\n                                <List.Header>\r\n                                    {reason}\r\n                                </List.Header>\r\n                            </List.Item>\r\n                        ))}\r\n                    </List>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reasons: state.reasons,\r\n        whiteTheme: state.whiteTheme,\r\n    }\r\n}\r\n\r\nReasons.propTypes = {\r\n    reasons: array.isRequired,\r\n    dispatch: func.isRequired,\r\n    whiteTheme: bool.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Reasons)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { array, func, bool } from 'prop-types'\r\nimport { Item, Header, Icon, Button, Segment } from 'semantic-ui-react'\r\nimport moment from 'moment'\r\n\r\nconst toSummaries = (debts) => {\r\n    const summaries = {}\r\n    debts\r\n        .filter(debt => !debt.paid)\r\n        .forEach(debt => {\r\n            summaries[debt.who] = summaries[debt.who] || { who: debt.who, amount: 0 }\r\n            summaries[debt.who].amount += debt.amount\r\n        })\r\n    return Object.values(summaries).filter(s => s.amount !== 0)\r\n}\r\n\r\nclass Debts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    summaryItem(summary) {\r\n        return (\r\n            <Item key={summary.who}>\r\n                <Item.Content>\r\n                    {summary.amount > 0 ?\r\n                        <Item.Header>\r\n                            {summary.who} owes <span style={{ color: 'green' }}>{summary.amount}€</span> to you\r\n                        </Item.Header>\r\n                        :\r\n                        <Item.Header>\r\n                            You owe <span style={{ color: 'red' }}>{-summary.amount}€</span> to {summary.who}\r\n                        </Item.Header>\r\n                    }\r\n                </Item.Content>\r\n                <Button\r\n                    color='green'\r\n                    content={'Pay all'}\r\n                    icon='euro'\r\n                    onClick={() => this.props.dispatch({ type: 'PayAll', value: summary.who })}\r\n                />\r\n            </Item>\r\n        )\r\n    }\r\n\r\n    debtItem(debt) {\r\n        return (\r\n            <Item key={debt.id}>\r\n                {debt.amount > 0 ?\r\n                    <Item.Content>\r\n                        <Item.Header style={{ color: debt.paid ? 'gray' : 'black' }}>\r\n                            {debt.who} owes <span style={{ color: 'green' }}>{debt.amount}€</span> to you for {debt.reason}\r\n                        </Item.Header>\r\n                        <Item.Meta>{moment(debt.date).local().format('DD-MM-YYYY')}</Item.Meta>\r\n                        {debt.comment && <Item.Description style={{ color: debt.paid ? 'gray' : 'black' }}>{debt.comment}</Item.Description>}\r\n                    </Item.Content>\r\n                    :\r\n                    <Item.Content>\r\n                        <Item.Header style={{ color: debt.paid ? 'gray' : 'black' }}>\r\n                            You owe <span style={{ color: 'red' }}>{-debt.amount}€</span> to {debt.who} for {debt.reason}\r\n                        </Item.Header>\r\n                        <Item.Meta>{moment(debt.date).local().format('DD-MM-YYYY')}</Item.Meta>\r\n                        {debt.comment && <Item.Description style={{ color: debt.paid ? 'gray' : 'black' }}>{debt.comment}</Item.Description>}\r\n                    </Item.Content>\r\n                }\r\n                <Button\r\n                    color='green'\r\n                    content={debt.paid ? 'Undo payment' : 'Pay'}\r\n                    icon='euro'\r\n                    basic={debt.paid}\r\n                    onClick={() => this.props.dispatch({ type: debt.paid ? 'UnPayDebt' : 'PayDebt', value: debt.id })}\r\n                />\r\n            </Item>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { whiteTheme, debts } = this.props\r\n        return (\r\n            <Segment inverted={whiteTheme} basic style={{ height: '100vh' }}>\r\n                <Segment>\r\n                    <Header size=\"large\"><Icon name=\"file outline\" />Summary</Header>\r\n                    <Item.Group divided link>\r\n                        {toSummaries(debts).sort((a, b) => a.who.localeCompare(b.who)).map(this.summaryItem.bind(this))}\r\n                    </Item.Group>\r\n                </Segment>\r\n                <Segment>\r\n                    <Header size=\"large\"><Icon name=\"history\" />History</Header>\r\n                    <Item.Group divided>\r\n                        {debts.sort((a, b) => -a.date.localeCompare(b.date)).map(this.debtItem.bind(this))}\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        debts: state.debts,\r\n        whiteTheme: state.whiteTheme,\r\n    }\r\n}\r\n\r\nDebts.propTypes = {\r\n    debts: array.isRequired,\r\n    dispatch: func.isRequired,\r\n    whiteTheme: bool.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Debts)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { array, func, bool } from 'prop-types'\r\nimport { Header, Button, Segment, Input, List } from 'semantic-ui-react'\r\n\r\nclass Contacts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { whiteTheme, dispatch, contacts } = this.props\r\n        return (\r\n            <Segment inverted={whiteTheme} basic style={{ height: '100vh' }}>\r\n                <Header size=\"large\">Contacts</Header>\r\n                <Input\r\n                    action={{ content: 'Add contact', onClick: () => {\r\n                        dispatch({ type: 'AddContact', value: this.state.value })\r\n                        this.setState({ value: '' })\r\n                    }}}\r\n                    placeholder='Contact name...'\r\n                    onChange={(e => this.setState({ value: e.target.value }))}\r\n                    value={this.state.value}\r\n                />\r\n                <List inverted={whiteTheme} divided>\r\n                    {contacts.sort().map(contact => (\r\n                        <List.Item key={contact}>\r\n                            <List.Content floated='right'>\r\n                                <Button\r\n                                    color='red'\r\n                                    content={'Remove'}\r\n                                    icon='remove'\r\n                                    onClick={() => {\r\n                                        dispatch({ type: 'RemoveContact', value: contact })\r\n                                    }}\r\n                                />\r\n                            </List.Content>\r\n                            <List.Header>\r\n                                {contact}\r\n                            </List.Header>\r\n                        </List.Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: state.contacts,\r\n        whiteTheme: state.whiteTheme,\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    contacts: array.isRequired,\r\n    dispatch: func.isRequired,\r\n    whiteTheme: bool.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Contacts)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport MainPage from './pages/MainPage'\nimport AddDebt from './pages/AddDebt'\nimport Reasons from './pages/Reasons'\nimport Debts from './pages/Debts'\nimport Contacts from './pages/Contacts'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={'/maksavelat'}>\n        <div>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/AddDebt\" component={AddDebt} />\n          <Route exact path=\"/Debts\" component={Debts} />\n          <Route exact path=\"/Reasons\" component={Reasons} />\n          <Route exact path=\"/Contacts\" component={Contacts} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    reasons: [\"Movies\", \"Badminton\", \"Other\"],\r\n    contacts: [],\r\n    debts: [],\r\n    whiteTheme: false,\r\n}\r\n\r\nconst testState = {\r\n    reasons: [\"Leffa\", \"Keilaus\", \"Sulkapallo\"],\r\n    contacts: [\"matti\", \"pekka\", \"maija\"],\r\n    debts: [\r\n        { who: \"matti\", amount: -15, reason: \"Leffa\", comment: \"\", paid: false, id: 1, date: \"2019-01-24T22:55:24+02:00\" },\r\n        { who: \"matti\", amount: 3.4, reason: \"Keilaus\", comment: \"\", paid: false, id: 2, date: \"2019-01-22T22:55:24+02:00\" },\r\n        { who: \"pekka\", amount: -6, reason: \"Sulkapallo\", comment: \"\", paid: false, id: 3, date: \"2019-01-27T22:55:24+02:00\" },\r\n        { who: \"maija\", amount: -32, reason: \"Leffa\", comment: \"\", paid: false, id: 4, date: \"2019-01-29T22:55:24+02:00\" },\r\n    ],\r\n    whiteTheme: false,\r\n}\r\n\r\nconst reducer = (paramstate, action) => {\r\n    let realstate = paramstate || JSON.parse(window.localStorage.getItem(\"maksavelat\")) || initialState\r\n    const state = JSON.parse(JSON.stringify(realstate))\r\n    switch (action.type) {\r\n        case \"ToggleTheme\":\r\n            state.whiteTheme = !state.whiteTheme\r\n            break\r\n        case \"AddReason\":\r\n            if (action.value.length !== 0 && !state.reasons.find(r => r === action.value))\r\n                state.reasons.push(action.value)\r\n            break\r\n        case \"RemoveReason\":\r\n            state.reasons = state.reasons.filter(r => r !== action.value)\r\n            break\r\n        case \"AddContact\":\r\n            if (action.value.length !== 0 && !state.contacts.find(c => c === action.value))\r\n                state.contacts.push(action.value)\r\n            break\r\n        case \"RemoveContact\":\r\n            state.contacts = state.contacts.filter(c => c !== action.value)\r\n            break\r\n        case \"AddDebt\":\r\n            action.value.id = state.debts.reduce((acc, d) => Math.max(d.id, acc), 0) + 1\r\n            state.debts.push(action.value)\r\n            break\r\n        case \"PayDebt\":\r\n            state.debts.filter(d => d.id === action.value).forEach(d => { d.paid = true })\r\n            break\r\n        case \"UnPayDebt\":\r\n            state.debts.filter(d => d.id === action.value).forEach(d => { d.paid = false })\r\n            break\r\n        case \"PayAll\":\r\n            state.debts.filter(d => d.who === action.value).forEach(d => { d.paid = true })\r\n            break\r\n        default:\r\n            break\r\n    }\r\n    window.localStorage.setItem(\"maksavelat\", JSON.stringify(state))\r\n    console.log(state, action)\r\n    return state\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducer'\n\nlet store = createStore(reducer)\n\nconst render = () => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n}\n\nstore.subscribe(render)\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}