{"version":3,"sources":["pages/MainPage.js","pages/AddDebt.js","pages/Reasons.js","pages/Debts.js","pages/Contacts.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["MySegment","_ref","to","linkProps","segmentProps","children","react_default","a","createElement","Link","Object","assign","Segment","padded","MainPage","Container","textAlign","fluid","style","cursor","height","Group","MainPage_MySegment","Header","toOptions","label","key","text","value","initialState","debt","who","amount","for","comment","errorAmount","errorContact","errorReason","errorTimer","AddDebt","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","_this$props","reasons","contacts","whiteTheme","_this$state","reason","inverted","basic","Form","onSubmit","Number","clearTimeout","setState","setTimeout","dispatch","type","date","moment","format","paid","newstate","react","Input","required","error","step","placeholder","onChange","_","e","Select","options","sort","map","widths","Button","color","onClick","preventDefault","Component","connect","Reasons","size","action","content","target","List","divided","Item","Content","floated","icon","Debts","summary","id","Meta","local","Description","debts","Icon","name","link","summaries","filter","forEach","values","s","toSummaries","b","localeCompare","summaryItem","bind","debtItem","Contacts","contact","App","BrowserRouter","basename","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","reducer","paramstate","realstate","JSON","parse","localStorage","getItem","stringify","d","d1","reduce","acc","Math","max","length","some","r","push","c","setItem","store","createStore","render","ReactDOM","es","src_App","document","getElementById","subscribe","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c87bbe7c.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Container, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst MySegment = ({to, linkProps, segmentProps, children}) => <Link to={to} {...linkProps}><Segment padded=\"very\" {...segmentProps}>{children}</Segment></Link>\n\nconst MainPage = () => (\n<Container textAlign=\"center\" fluid style={{ cursor: 'pointer', height: '100%' }}>\n<Segment.Group>\n    <MySegment to=\"/AddDebt\">\n    {/* <MyIcon name='user' />\n    <MyIcon name='arrow right' />\n    <MyIcon name='euro sign' /> */}\n    <Header>Add debt</Header>\n    </MySegment>\n    <MySegment to=\"/Debts\">\n    {/* <MyIcon name='user' />\n    <MyIcon name='handshake' />\n    <MyIcon name='user' /> */}\n    <Header>Debts</Header>\n    </MySegment>\n    <MySegment to=\"/Contacts\">\n    {/* <MyIcon name='users' /> */}\n    <Header>Edit contacts</Header>\n    </MySegment>\n    <MySegment to=\"/Reasons\">\n    {/* <MyIcon name='users' /> */}\n    <Header>Edit reasons</Header>\n    </MySegment>\n</Segment.Group>\n</Container>\n)\n\nexport default MainPage\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { array, func, bool } from 'prop-types'\nimport { Form, Segment } from 'semantic-ui-react'\nimport moment from 'moment'\n\nconst toOptions = (label) => ({ key: label, text: label, value: label })\n\nconst initialState = () => ({\n    debt: true,\n    who: '',\n    amount: '',\n    for: '',\n    comment: '',\n    errorAmount: false,\n    errorContact: false,\n    errorReason: false,\n    errorTimer: null,\n})\n\nclass AddDebt extends Component {\n    constructor(props) {\n        super(props)\n        this.state = initialState()\n    }\n\n    render() {\n        const { reasons, contacts, whiteTheme } = this.props\n        let {errorAmount, errorContact, errorReason, debt, who, for: reason, comment, amount} = this.state\n        return (\n            <div>\n                <Segment inverted={whiteTheme} basic style={{ height: '100vh'}}>\n                    <Form\n                        inverted={whiteTheme}\n                        onSubmit={() => {\n                            amount = Number(amount)\n                            if (!amount)\n                                errorAmount = true\n                            if (!who)\n                                errorContact = true\n                            if (!reason)\n                                errorReason = true\n\n                            if (!errorAmount && !errorContact && !errorReason) {\n                                this.props.dispatch({\n                                    type: 'AddDebt',\n                                    value: {\n                                        who: who,\n                                        amount: debt ? -amount : amount,\n                                        reason: reason,\n                                        comment: comment,\n                                        date: moment().format(),\n                                        paid: false,\n                                    },\n                                })\n                                if (this.state.errorTimer)\n                                    clearTimeout(this.state.errorTimer)\n                                const newstate = initialState()\n                                newstate.debt = this.state.debt\n                                this.setState(newstate)\n                            } else {\n                                if (this.state.errorTimer)\n                                    clearTimeout(this.state.errorTimer)\n                                this.setState({errorAmount, errorReason, errorContact, errorTimer: setTimeout(()=>this.setState({errorAmount: false, errorReason: false, errorContact: false}), 3000)})\n                            }\n                        }}\n                    >\n                        {this.state.debt ?\n                            <Fragment>\n                                <Form.Input required error={errorAmount} type=\"number\" step=\"0.01\" label='You owe' placeholder='Amount...' value={this.state.amount} onChange={(_, e) => this.setState({ amount: e.value })} />\n                                <Form.Select required error={errorContact} label='To' options={contacts.sort().map(toOptions)} placeholder='Contact...' value={this.state.who} onChange={(_, e) => this.setState({ who: e.value })} />\n                            </Fragment>\n                            :\n                            <Fragment>\n                                <Form.Select required error={errorContact} label='Contact' options={contacts.sort().map(toOptions)} placeholder='Contact...' value={this.state.who} onChange={(_, e) => this.setState({ who: e.value })} />\n                                <Form.Input required error={errorAmount} type=\"number\" step=\"0.01\" label='Owes you' placeholder='Amount...' value={this.state.amount} onChange={(_, e) => this.setState({ amount: e.value })} />\n                            </Fragment>\n                        }\n                        <Form.Select required error={errorReason} label='For' options={reasons.sort().map(toOptions)} placeholder='Reason...' value={this.state.for} onChange={(_, e) => this.setState({ for: e.value })} />\n                        <Form.Input label='Comment (optional)' placeholder='Comment...' value={this.state.comment} onChange={(_, e) => this.setState({ comment: e.value })} />\n                        <Form.Group widths=\"equal\">\n                            <Form.Button color=\"blue\" basic fluid onClick={(e) => {\n                                e.preventDefault()\n                                this.setState((state) => ({ debt: !state.debt }))\n                            }}>Toggle reciever</Form.Button>\n                            <Form.Button color=\"green\" basic fluid>Add debt</Form.Button>\n                        </Form.Group>\n                    </Form>\n                </Segment>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        reasons: state.reasons,\n        contacts: state.contacts,\n        whiteTheme: state.whiteTheme,\n    }\n}\n\nAddDebt.propTypes = {\n    reasons: array.isRequired,\n    contacts: array.isRequired,\n    whiteTheme: bool.isRequired,\n    dispatch: func.isRequired,\n}\n\nexport default connect(mapStateToProps)(AddDebt)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { array, func, bool } from 'prop-types'\nimport { Header, Button, Segment, Input, List } from 'semantic-ui-react'\n\nclass Reasons extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: ''\n        }\n    }\n\n    render() {\n        const { whiteTheme, dispatch, reasons } = this.props\n        return (\n            <div>\n                <Segment inverted={whiteTheme} basic style={{ height: '100vh' }}>\n                    <Header size=\"large\">Reasons</Header>\n                    <Input\n                        action={{ content: 'Add reason', onClick: () => {\n                            dispatch({ type: 'AddReason', value: this.state.value })\n                            this.setState({ value: '' })\n                        }}}\n                        placeholder='Reason name...'\n                        onChange={(e => this.setState({ value: e.target.value }))}\n                        value={this.state.value}\n                    />\n                    <List inverted={whiteTheme} divided>\n                        {reasons.map(reason => (\n                            <List.Item key={reason}>\n                                <List.Content floated=\"right\">\n                                    <Button\n                                        color='red'\n                                        content={'Remove'}\n                                        icon='remove'\n                                        onClick={() => {\n                                            dispatch({ type: 'RemoveReason', value: reason })\n                                        }}\n                                    />\n                                </List.Content>\n                                <List.Header>\n                                    {reason}\n                                </List.Header>\n                            </List.Item>\n                        ))}\n                    </List>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        reasons: state.reasons,\n        whiteTheme: state.whiteTheme,\n    }\n}\n\nReasons.propTypes = {\n    reasons: array.isRequired,\n    dispatch: func.isRequired,\n    whiteTheme: bool.isRequired,\n}\n\nexport default connect(mapStateToProps)(Reasons)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { array, func, bool } from 'prop-types'\nimport { Item, Header, Icon, Button, Segment } from 'semantic-ui-react'\nimport moment from 'moment'\n\nconst toSummaries = (debts) => {\n    const summaries = {}\n    debts\n        .filter(debt => !debt.paid)\n        .forEach(debt => {\n            summaries[debt.who] = summaries[debt.who] || { who: debt.who, amount: 0 }\n            summaries[debt.who].amount += debt.amount\n        })\n    return Object.values(summaries).filter(s => s.amount !== 0)\n}\n\nclass Debts extends Component {\n    summaryItem(summary) {\n        return (\n            <Item key={summary.who}>\n                <Item.Content>\n                    {summary.amount > 0 ?\n                        <Item.Header>\n                            {summary.who} owes <span style={{ color: 'green' }}>{summary.amount}€</span> to you\n                        </Item.Header>\n                        :\n                        <Item.Header>\n                            You owe <span style={{ color: 'red' }}>{-summary.amount}€</span> to {summary.who}\n                        </Item.Header>\n                    }\n                </Item.Content>\n                <Button\n                    color='green'\n                    content={'Pay all'}\n                    icon='euro'\n                    onClick={() => this.props.dispatch({ type: 'PayAll', value: summary.who })}\n                />\n            </Item>\n        )\n    }\n\n    debtItem(debt) {\n        return (\n            <Item key={debt.id}>\n                {debt.amount > 0 ?\n                    <Item.Content>\n                        <Item.Header style={{ color: debt.paid ? 'gray' : 'black' }}>\n                            {debt.who} owes <span style={{ color: 'green' }}>{debt.amount}€</span> to you for {debt.reason}\n                        </Item.Header>\n                        <Item.Meta>{moment(debt.date).local().format('DD-MM-YYYY')}</Item.Meta>\n                        {debt.comment && <Item.Description style={{ color: debt.paid ? 'gray' : 'black' }}>{debt.comment}</Item.Description>}\n                    </Item.Content>\n                    :\n                    <Item.Content>\n                        <Item.Header style={{ color: debt.paid ? 'gray' : 'black' }}>\n                            You owe <span style={{ color: 'red' }}>{-debt.amount}€</span> to {debt.who} for {debt.reason}\n                        </Item.Header>\n                        <Item.Meta>{moment(debt.date).local().format('DD-MM-YYYY')}</Item.Meta>\n                        {debt.comment && <Item.Description style={{ color: debt.paid ? 'gray' : 'black' }}>{debt.comment}</Item.Description>}\n                    </Item.Content>\n                }\n                <Button\n                    color='green'\n                    content={debt.paid ? 'Undo payment' : 'Pay'}\n                    icon='euro'\n                    basic={debt.paid}\n                    onClick={() => this.props.dispatch({ type: debt.paid ? 'UnPayDebt' : 'PayDebt', value: debt.id })}\n                />\n            </Item>\n        )\n    }\n\n    render() {\n        const { whiteTheme, debts } = this.props\n        return (\n            <Segment inverted={whiteTheme} basic style={{ height: '100vh' }}>\n                <Segment>\n                    <Header size=\"large\"><Icon name=\"file outline\" />Summary</Header>\n                    <Item.Group divided link>\n                        {toSummaries(debts).sort((a, b) => a.who.localeCompare(b.who)).map(this.summaryItem.bind(this))}\n                    </Item.Group>\n                </Segment>\n                <Segment>\n                    <Header size=\"large\"><Icon name=\"history\" />History</Header>\n                    <Item.Group divided>\n                        {debts.sort((a, b) => -a.date.localeCompare(b.date)).map(this.debtItem.bind(this))}\n                    </Item.Group>\n                </Segment>\n            </Segment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        debts: state.debts,\n        whiteTheme: state.whiteTheme,\n    }\n}\n\nDebts.propTypes = {\n    debts: array.isRequired,\n    dispatch: func.isRequired,\n    whiteTheme: bool.isRequired,\n}\n\nexport default connect(mapStateToProps)(Debts)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { array, func, bool } from 'prop-types'\nimport { Header, Button, Segment, Input, List } from 'semantic-ui-react'\n\nclass Contacts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: ''\n        }\n    }\n\n    render() {\n        const { whiteTheme, dispatch, contacts } = this.props\n        return (\n            <Segment inverted={whiteTheme} basic style={{ height: '100vh' }}>\n                <Header size=\"large\">Contacts</Header>\n                <Input\n                    action={{ content: 'Add contact', onClick: () => {\n                        dispatch({ type: 'AddContact', value: this.state.value })\n                        this.setState({ value: '' })\n                    }}}\n                    placeholder='Contact name...'\n                    onChange={(e => this.setState({ value: e.target.value }))}\n                    value={this.state.value}\n                />\n                <List inverted={whiteTheme} divided>\n                    {contacts.sort().map(contact => (\n                        <List.Item key={contact}>\n                            <List.Content floated='right'>\n                                <Button\n                                    color='red'\n                                    content={'Remove'}\n                                    icon='remove'\n                                    onClick={() => {\n                                        dispatch({ type: 'RemoveContact', value: contact })\n                                    }}\n                                />\n                            </List.Content>\n                            <List.Header>\n                                {contact}\n                            </List.Header>\n                        </List.Item>\n                    ))}\n                </List>\n            </Segment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        contacts: state.contacts,\n        whiteTheme: state.whiteTheme,\n    }\n}\n\nContacts.propTypes = {\n    contacts: array.isRequired,\n    dispatch: func.isRequired,\n    whiteTheme: bool.isRequired,\n}\n\nexport default connect(mapStateToProps)(Contacts)\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport MainPage from './pages/MainPage'\nimport AddDebt from './pages/AddDebt'\nimport Reasons from './pages/Reasons'\nimport Debts from './pages/Debts'\nimport Contacts from './pages/Contacts'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={'/maksavelat'}>\n        <div>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/AddDebt\" component={AddDebt} />\n          <Route exact path=\"/Debts\" component={Debts} />\n          <Route exact path=\"/Reasons\" component={Reasons} />\n          <Route exact path=\"/Contacts\" component={Contacts} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    reasons: [\"Movies\", \"Badminton\", \"Other\"],\n    contacts: [],\n    debts: [],\n    whiteTheme: false,\n}\n\nconst reducer = (paramstate, action) => {\n    let realstate = paramstate || JSON.parse(window.localStorage.getItem(\"maksavelat\")) || initialState\n    const state = JSON.parse(JSON.stringify(realstate))\n\n    // correct missing IDs if any\n    state.debts.forEach(d => {\n        if (!d.id)\n            d.id = state.debts.filter(d1 => d1.id).reduce((acc, d) => Math.max(d.id, acc), 0) + 1\n    })\n\n    switch (action.type) {\n        case \"ToggleTheme\":\n            state.whiteTheme = !state.whiteTheme\n            break\n        case \"AddReason\":\n            if (action.value.length !== 0 && !state.reasons.some(r => r === action.value))\n                state.reasons.push(action.value)\n            break\n        case \"RemoveReason\":\n            state.reasons = state.reasons.filter(r => r !== action.value)\n            break\n        case \"AddContact\":\n            if (action.value.length !== 0 && !state.contacts.some(c => c === action.value))\n                state.contacts.push(action.value)\n            break\n        case \"RemoveContact\":\n            state.contacts = state.contacts.filter(c => c !== action.value)\n            break\n        case \"AddDebt\":\n            action.value.id = state.debts.reduce((acc, d) => Math.max(d.id, acc), 0) + 1\n            state.debts.push(action.value)\n            break\n        case \"PayDebt\":\n            state.debts.filter(d => d.id === action.value).forEach(d => { d.paid = true })\n            break\n        case \"UnPayDebt\":\n            state.debts.filter(d => d.id === action.value).forEach(d => { d.paid = false })\n            break\n        case \"PayAll\":\n            state.debts.filter(d => d.who === action.value).forEach(d => { d.paid = true })\n            break\n        default:\n            break\n    }\n    window.localStorage.setItem(\"maksavelat\", JSON.stringify(state))\n    console.log(state, action)\n    return state\n}\n\nexport default reducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducer'\n\nlet store = createStore(reducer)\n\nconst render = () => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n}\n\nstore.subscribe(render)\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}